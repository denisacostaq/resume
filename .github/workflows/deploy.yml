# This is a basic workflow to help you get started with Actions

name: Deploy cv

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the develop branch
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    env:
      working-directory: .

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Install packages
        run: sudo apt-get -y install pandoc context
#        working-directory: ${{env.working-directory}}

      # Configure the project to build
      - name: Configure project build
        shell: bash
        working-directory: ${{env.working-directory}}
        run: |
          mkdir build
          pushd build
          cmake ..

      # Runs a single command using the runners shell
      - name: Build docs
        shell: bash
        working-directory: ${{env.working-directory}}/build
        run: make

      - name: Cache
        uses: actions/cache@v2.1.4
        with:
          # A list of files, directories, and wildcard patterns to cache and restore
          path: build
          # An explicit key for restoring and saving the cache
          key: build-output-${{ hashFiles('.github/workflows/deploy.yml', './CMakeLists.txt', './src/**') }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
    
      - name: Cache
        uses: actions/cache@v2.1.4
        with:
          # A list of files, directories, and wildcard patterns to cache and restore
          path: build
          # An explicit key for restoring and saving the cache
          key: build-output-${{ hashFiles('.github/workflows/deploy.yml', './CMakeLists.txt', './src/**') }}

      - name: Ls
        run: find ./
